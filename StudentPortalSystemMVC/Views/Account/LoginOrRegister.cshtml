@*@{
        ViewBag.Title = "@ViewBag.Role Login or Register";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <h2>@ViewBag.Role - Login or Register</h2>

    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
    }
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">@TempData["Success"]</div>
    }
    <div class="row">
        <div class="col-md-6">
            <h3>Login</h3>
            @using (Html.BeginForm("UserLogin", "Account", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <input type="hidden" name="role" value="@ViewBag.Role" />
                <div class="form-group">
                    <label for="username">Username</label>
                    <input type="text" id="username" name="username" class="form-control" required />
                </div>
                <div class="form-group">
                    <label for="password">Password</label>
                    <input type="password" id="password" name="password" class="form-control" required />
                </div>
                <button type="submit" class="btn btn-primary">Login</button>
            }
        </div>
        <div class="col-md-6">
            <h3>Register</h3>
            @using (Html.BeginForm("Register", "Account", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <input type="hidden" name="role" value="@ViewBag.Role" />
                <button type="submit" class="btn btn-success">Proceed to Register</button>
            }
        </div>
    </div>*@

@{
    ViewBag.Title = ViewBag.Role + " Login or Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card p-4 mt-4 shadow-sm">
            <h2 class="text-center mb-4">@ViewBag.Role - Login or Register</h2>

            @if (ViewBag.ErrorMessage != null)
            {
                <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
            }
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success">@TempData["Success"]</div>
            }

            <div class="row">
                <div class="col-md-6">
                    <h3 class="mb-3">Login</h3>
                    @using (Html.BeginForm("UserLogin", "Account", FormMethod.Post, new { @class = "needs-validation", novalidate = true }))
                    {
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="role" value="@ViewBag.Role" />
                        <div class="mb-3">
                            <label for="username" class="form-label">Username</label>
                            <input type="text" id="username" name="username" class="form-control" required />
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <input type="password" id="password" name="password" class="form-control" required />
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Login</button>
                    }
                </div>
                <div class="col-md-6">
                    <h3 class="mb-3">Register</h3>
                    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "needs-validation", novalidate = true }))
                    {
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="role" value="@ViewBag.Role" />
                        <button type="submit" class="btn btn-success w-100">Proceed to Register</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Bootstrap form validation
        (function () {
            'use strict';
            var forms = document.querySelectorAll('.needs-validation');
            Array.prototype.slice.call(forms).forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();
    </script>
}