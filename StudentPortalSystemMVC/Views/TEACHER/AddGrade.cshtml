@*@model List<StudentPortalSystemMVC.Models.StudentGradeViewModel>
    @using System.Web.Optimization


    @{
        ViewBag.Title = "Add Grades for " + ViewBag.CourseName;
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <h2>Add Grades for @ViewBag.CourseName</h2>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">@TempData["Success"]</div>
    }

    @using (Html.BeginForm("AddGrade", "Teacher", new { courseId = ViewBag.CourseId }, FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Student Name</th>
                    <th>Marks</th>
                    <th>Grade</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Count; i++)
                {
                    <tr>
                        <td>
                            @Html.HiddenFor(m => m[i].ENROLLMENT_ID)
                            @Model[i].StudentName
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m[i].Marks, new { @class = "form-control", @type = "number", @min = "0", @max = "100" })
                            @Html.ValidationMessageFor(m => m[i].Marks, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m[i].Grade, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m[i].Grade, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <button type="submit" class="btn btn-primary">Save Grades</button>
        <a href="@Url.Action("ManageGrades", new { courseId = ViewBag.CourseId })" class="btn btn-secondary">Cancel</a>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@

@model List<StudentPortalSystemMVC.Models.StudentGradeViewModel>
@using System.Web.Optimization

@{
    ViewBag.Title = "Add Grades for " + ViewBag.CourseName;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row justify-content-center">
    <div class="col-md-8 col-lg-6">
        <div class="card p-4 mt-5 shadow-sm bg-light">
            <h2 class="text-center mb-4 text-primary">Add Grades for @ViewBag.CourseName</h2>

            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger text-center">@TempData["Error"]</div>
            }
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success text-center">@TempData["Success"]</div>
            }

            @using (Html.BeginForm("AddGrade", "Teacher", new { courseId = ViewBag.CourseId }, FormMethod.Post, new { @class = "needs-validation", novalidate = true }))
            {
                @Html.AntiForgeryToken()
                <div class="table-responsive mb-3">
                    <table class="table table-striped table-bordered">
                        <thead class="table-primary">
                            <tr>
                                <th>Student Name</th>
                                <th>Marks</th>
                                <th>Grade</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.Count; i++)
                            {
                                <tr>
                                    <td>
                                        @Html.HiddenFor(m => m[i].ENROLLMENT_ID)
                                        @Model[i].StudentName
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(m => m[i].Marks, new { @class = "form-control", @type = "number", @min = "0", @max = "100", @required = "required" })
                                        @Html.ValidationMessageFor(m => m[i].Marks, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(m => m[i].Grade, new { @class = "form-control", @required = "required" })
                                        @Html.ValidationMessageFor(m => m[i].Grade, "", new { @class = "text-danger" })
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="d-flex justify-content-between">
                    <button type="submit" class="btn btn-primary">Save Grades</button>
                    <a href="@Url.Action("ManageGrades", new { courseId = ViewBag.CourseId })" class="btn btn-secondary">Cancel</a>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        // Bootstrap form validation
        (function () {
            'use strict';
            var forms = document.querySelectorAll('.needs-validation');
            Array.prototype.slice.call(forms).forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();
    </script>
}